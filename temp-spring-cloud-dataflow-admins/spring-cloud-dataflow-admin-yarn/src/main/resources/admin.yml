server:
  port: 9393
management:
  contextPath: /management

security:
  basic:
    enabled: false
          
spring:
  application:
    name: spring-cloud-dataflow-admin
  hadoop:
    fsUri: hdfs://localhost:8020
    resourceManagerHost: localhost
  yarn:
    appType: DATAFLOW
    appName: spring-cloud-dataflow-yarn-app
    applicationBaseDir: /app/
    client:
      clientClass: org.springframework.yarn.client.DefaultApplicationYarnClient
      files:
        - "file:${dataflow.yarn.app.appmaster.path:.}/spring-cloud-dataflow-yarn-appmaster-@project.version@.jar"
        - "file:${dataflow.yarn.app.container.path:.}/spring-cloud-dataflow-yarn-container-@project.version@.jar"
      launchcontext:
        archiveFile: spring-cloud-dataflow-yarn-appmaster-@project.version@.jar
      resource:
        memory: 1g
  cloud:
    config:
      uri: http://localhost:8888

# If you prefer to use Eureka to locate the Config Server, you can do that by setting
# spring.cloud.config.discovery.enabled=true (default "false"). The net result of that is 
# that client apps all need a bootstrap.yml (or an environment variable) with the Eureka 
# server address, e.g. in eureka.client.serviceUrl.defaultZone
#
#  cloud:
#     config:
#        discovery:
#           enabled: true
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/
